{%- set sahara_service_type = sahara_service_type|default("data_processing") %}
---
{%- include "sahara.yaml" %}

  KeystoneBasic.create_user:
    -
      args: {}
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      sla:
        failure_rate:
          max: 0

  KeystoneBasic.create_delete_user:
    -
      args: {}
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      sla:
        failure_rate:
          max: 0

  KeystoneBasic.create_and_list_tenants:
    -
      args: {}
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      sla:
        failure_rate:
          max: 0

  KeystoneBasic.create_and_list_users:
    -
      args: {}
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      sla:
        failure_rate:
          max: 0

  KeystoneBasic.create_tenant:
    -
      args: {}
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      sla:
        failure_rate:
          max: 0

  KeystoneBasic.create_tenant_with_users:
    -
      args:
        users_per_tenant: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
      sla:
        failure_rate:
          max: 0

  KeystoneBasic.create_delete_user:
    -
      args: {}
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      sla:
        failure_rate:
          max: 0

  HeatStacks.create_and_list_stack:
    -
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  HeatStacks.create_and_delete_stack:
    -
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1

  Authenticate.keystone:
    -
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Authenticate.validate_cinder:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Authenticate.validate_glance:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Authenticate.validate_heat:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Authenticate.validate_nova:
    -
      args:
        repetitions: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Quotas.cinder_update_and_delete:
    -
      args:
        max_quota: 1024
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Quotas.cinder_update:
    -
      args:
        max_quota: 1024
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Quotas.nova_update_and_delete:
    -
      args:
        max_quota: 1024
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  Quotas.nova_update:
    -
      args:
        max_quota: 1024
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  VMTasks.boot_runcommand_delete:
    -
      args:
        flavor:
          name: "m1.tiny"
        image:
          name: "TestVM|cirros.*uec"
        floating_network: "net04_ext"
        use_floating_ip: true
        command:
          script_file: "~/.rally/extra/instance_dd_test.sh"
          interpreter: "/bin/sh"
        username: "cirros"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        network: {}
      sla:
        failure_rate:
          max: 0


  NovaServers.boot_and_delete_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM|cirros.*uec"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

    -
      args:
        auto_assign_nic: true
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM|cirros.*uec"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        network:
          start_cidr: "10.2.0.0/24"
          networks_per_tenant: 2
      sla:
        failure_rate:
          max: 0


  NovaServers.boot_and_list_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM|cirros.*uec"
        detailed: True
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  NovaServers.list_servers:
    -
      args:
        detailed: True
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        servers:
          flavor:
              name: "m1.tiny"
          image:
              name: "TestVM|cirros.*uec"
          servers_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  NovaServers.boot_and_bounce_server:
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM|cirros.*uec"
        actions:
          -
            hard_reboot: 1
          -
            stop_start: 1
          -
            rescue_unrescue: 1
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  NovaServers.boot_server:
    -
      args:
        flavor:
            name: "^ram64$"
        image:
            name: "TestVM|cirros.*uec"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        flavors:
          -
            name: "ram64"
            ram: 64
      sla:
        failure_rate:
          max: 0
    -
      args:
        flavor:
            name: "m1.tiny"
        image:
            name: "TestVM|cirros.*uec"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  NovaSecGroup.create_and_delete_secgroups:
    -
      args:
        security_group_count: 5
        rules_per_security_group: 5
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          nova:
            security_groups: -1
            security_group_rules: -1
      sla:
        failure_rate:
          max: 0

  NovaSecGroup.create_and_list_secgroups:
    -
      args:
        security_group_count: 5
        rules_per_security_group: 5
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          nova:
            security_groups: -1
            security_group_rules: -1
      sla:
        failure_rate:
          max: 0


  NovaSecGroup.boot_and_delete_server_with_secgroups:
    -
      args:
        flavor:
          name: "m1.tiny"
        image:
          name: "TestVM|cirros.*uec"
        security_group_count: 5
        rules_per_security_group: 5
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        network:
          start_cidr: "10.2.0.0/24"
        quotas:
          nova:
            security_groups: -1
            security_group_rules: -1


  NeutronNetworks.create_and_list_networks:
    -
      args:
        network_create_args:
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_list_subnets:
    -
      args:
        network_create_args:
        subnet_create_args:
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
             subnet: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_list_routers:
    -
      args:
        network_create_args:
        subnet_create_args:
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args:
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
             subnet: -1
             router: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_list_ports:
    -
      args:
        network_create_args:
        port_create_args:
        ports_per_network: 4
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
             network: -1
             subnet: -1
             router: -1
             port: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_update_networks:
    -
      args:
        network_create_args: {}
        network_update_args:
            admin_state_up: False
            name: "_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_update_subnets:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.4.0.0/16"
        subnets_per_network: 2
        subnet_update_args:
            enable_dhcp: False
            name: "_subnet_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 5
          users_per_tenant: 5
        quotas:
          neutron:
            network: -1
            subnet: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_update_routers:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
        router_create_args: {}
        router_update_args:
            admin_state_up: False
            name: "_router_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
            router: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_update_ports:
    -
      args:
        network_create_args: {}
        port_create_args: {}
        ports_per_network: 5
        port_update_args:
            admin_state_up: False
            device_id: "dummy_id"
            device_owner: "dummy_owner"
            name: "_port_updated"
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_delete_networks:
    -
      args:
        network_create_args: {}
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_delete_subnets:
    -
      args:
        network_create_args: {}
        subnet_create_args: {}
        subnet_cidr_start: "1.1.0.0/30"
        subnets_per_network: 2
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            subnet: -1
      sla:
        failure_rate:
          max: 0

  NeutronNetworks.create_and_delete_ports:
    -
      args:
        network_create_args: {}
        port_create_args: {}
        ports_per_network: 10
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        network: {}
        users:
          tenants: 1
          users_per_tenant: 1
        quotas:
          neutron:
            network: -1
            port: -1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_upload_volume_to_image:
    -
      args:
        size: 1
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_volume_backup:
    -
      args:
        size: 1
        do_delete: True
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_restore_volume_backup:
    -
      args:
        size: 1
        do_delete: True
      runner:
        type: "constant"
        times: 1
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0

  CinderVolumes.create_and_list_volume_backups:
    -
      args:
        size: 1
        detailed: True
        do_delete: True
      runner:
        type: "constant"
        times: 2
        concurrency: 1
      context:
        users:
          tenants: 1
          users_per_tenant: 1
      sla:
        failure_rate:
          max: 0
